{
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -1152,
        432
      ],
      "id": "d552cf88-8e79-4e39-b1b2-01271ce47851",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "url": "={{ $json.endpoint }}/api/v1/request?take=100 ",
        "options": {},
        "headerParametersUi": {
          "parameter": [
            {
              "name": "X-Api-Key",
              "value": "={{ $json.key }}"
            }
          ]
        }
      },
      "id": "fb076bed-dab0-4336-9291-521a5970e970",
      "name": "Get Overseerr Requests",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        -192,
        496
      ]
    },
    {
      "parameters": {
        "functionCode": "\nconst data = $json.results || [];\n\nconst pending = data.filter(r => r.status === 1);\nconst approved = data.filter(r => r.status === 2);\nconst available = data.filter(r => r.status === 3);\nconst stalled = data.filter(r => r.status === 2 && r.media?.status !== 5);\n\nreturn [{\n  json: {\n    date: new Date().toISOString().split('T')[0],\n    pending_count: pending.length,\n    approved_count: approved.length,\n    available_count: available.length,\n    stalled_count: stalled.length,\n    stalled_items: stalled.map(r => ({\n      title: r.media?.mediaInfo?.title || r.media?.title || 'Unknown',\n      movieId: r.id,\n      tmdbId: r.media.tmdbId,\n      mediaType: r.media?.mediaType || 'unknown',\n      status: 'approved',\n      downloadStatus: r.media?.status,\n      requestedBy: r.requestedBy.plexUsername,\n      createdDate: r.createdAt\n    }))\n  }\n}];\n"
      },
      "id": "40415ed9-c3cb-4d2d-b07f-b2d88e7e821e",
      "name": "Process Overseerr Data",
      "type": "n8n-nodes-base.function",
      "typeVersion": 1,
      "position": [
        -16,
        496
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "stalled_items",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        160,
        496
      ],
      "id": "126b5fd7-bb3e-4ad5-a59f-91a47f9b2a53",
      "name": "Split Out"
    },
    {
      "parameters": {
        "options": {
          "reset": false
        }
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        368,
        416
      ],
      "id": "d720f6ba-cdb6-4534-b061-9a50204245c1",
      "name": "Loop Over Items"
    },
    {
      "parameters": {
        "url": "={{ $('settings').item.json.endpoint }}/api/v1/{{ $json.detailsEndpoint }}",
        "options": {},
        "headerParametersUi": {
          "parameter": [
            {
              "name": "X-Api-Key",
              "value": "={{ $('settings').item.json.key }}"
            }
          ]
        }
      },
      "id": "154d547b-83da-40c6-bda6-34edd0f6e85a",
      "name": "Get Overseerr Requests1",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        816,
        672
      ]
    },
    {
      "parameters": {
        "aggregate": "aggregateAllItemData",
        "destinationFieldName": "output",
        "options": {}
      },
      "type": "n8n-nodes-base.aggregate",
      "typeVersion": 1,
      "position": [
        1344,
        336
      ],
      "id": "1786b62e-cd12-48c1-8a70-897f7cf50423",
      "name": "Aggregate"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "493c906e-d8a5-4085-b986-2ee15551e924",
              "name": "originalTitle",
              "value": "={{ $json.originalTitle }}",
              "type": "string"
            },
            {
              "id": "76331aa0-6b66-464c-ba0a-a5387cb2de4c",
              "name": "mediaType",
              "value": "={{ $json.mediaType }}",
              "type": "string"
            },
            {
              "id": "847e4fe6-d1c6-433f-95fd-4cfa7da0cd63",
              "name": "createdDate",
              "value": "={{ $json.createdDate }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        800,
        224
      ],
      "id": "4872f168-e3de-46b2-a490-c194d2254459",
      "name": "lessDetails"
    },
    {
      "parameters": {
        "url": "={{ $json.endpoint }}/api/v1/media?filter=processing",
        "options": {},
        "headerParametersUi": {
          "parameter": [
            {
              "name": "X-Api-Key",
              "value": "={{ $json.key }}"
            }
          ]
        }
      },
      "id": "4e4b86d5-27aa-42c1-accc-132b381074a6",
      "name": "Get Overseerr Requests2",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 2,
      "position": [
        -192,
        336
      ]
    },
    {
      "parameters": {
        "fieldToSplitOut": "results",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        160,
        336
      ],
      "id": "01eae456-317c-4da9-9c3a-35d063200995",
      "name": "Split Out1"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.lessDetail }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    },
                    "id": "fbb27dc3-3f0e-4c24-ba49-c8cd071499f0"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "less"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ab366dca-5538-4ede-82ad-eff424778900",
                    "leftValue": "={{ $json.lessDetail }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "false",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "more"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.3,
      "position": [
        -416,
        432
      ],
      "id": "9175f3eb-e0c5-4d36-8251-65398697a441",
      "name": "Switch"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('settings').item.json.lessDetail }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    },
                    "id": "3335f8d6-1949-4e3f-a090-33a62374ddf7"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "less"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0ce259da-7716-44cf-b71b-e5cf58d66947",
                    "leftValue": "={{ $('settings').item.json.lessDetail }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "false",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "more"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.3,
      "position": [
        624,
        336
      ],
      "id": "c6668e97-b443-413b-ba62-af7a986a9bfc",
      "name": "Switch1"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d0e6bf84-cede-4aa5-a6ea-24b0b4736196",
              "name": "endpoint",
              "value": "https://example.com",
              "type": "string"
            },
            {
              "id": "0a1f27fd-91ba-4417-a0c8-371b52b4c11c",
              "name": "key",
              "value": "supersecrethyperhardtoremmemberapikey",
              "type": "string"
            },
            {
              "id": "c404ccfa-fff2-41b5-8ca0-8406322ec32e",
              "name": "lessDetail",
              "value": true,
              "type": "boolean"
            },
            {
              "id": "bae98e78-58b8-40f6-842f-9df685eb922c",
              "name": "warnAfter",
              "value": 60,
              "type": "number"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -688,
        432
      ],
      "id": "b1330458-092a-476f-9510-ddf962702dbf",
      "name": "settings"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "b1877c1e-7aa3-4c2b-a384-834889fecb55",
              "leftValue": "={{ $json.daysSinceRequested }}",
              "rightValue": "={{ $('settings').item.json.warnAfter }}",
              "operator": {
                "type": "number",
                "operation": "gte"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        1184,
        336
      ],
      "id": "bbe28572-196c-4f55-aaf6-93afbe092204",
      "name": "IfOverXDays"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0257bd5d-8560-4073-9918-8ec14db94649",
              "name": "results",
              "value": "={{ $json.results }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -16,
        336
      ],
      "id": "d7c7666f-15ef-46fd-aaa3-d169401b7799",
      "name": "lilCleanUp"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "3a7fbbfa-84c0-4326-9e8d-1c4853126dac",
              "name": "movieId",
              "value": "={{ $('Loop Over Items').item.json.movieId }}{{ $('Loop Over Items').item.json.id }}",
              "type": "number"
            },
            {
              "id": "21618457-af69-4927-8966-993b7e998fa0",
              "name": "tmdbId",
              "value": "={{ $('Loop Over Items').item.json.tmdbId }}",
              "type": "number"
            },
            {
              "id": "5fe4c811-b685-42a0-aece-a507f2875b1c",
              "name": "mediaType",
              "value": "={{ $('Loop Over Items').item.json.mediaType }}",
              "type": "string"
            },
            {
              "id": "1141d9ed-57f7-4b04-a79a-757976c71f3c",
              "name": "status",
              "value": "={{ $('Loop Over Items').item.json.status }}",
              "type": "string"
            },
            {
              "id": "e91aed22-f8cb-40d6-b3ed-dcbab273fef7",
              "name": "downloadStatus",
              "value": "={{ $('Loop Over Items').item.json.downloadStatus }}",
              "type": "number"
            },
            {
              "id": "8fe27f8d-1d67-4fe6-9291-7a8315bec6e5",
              "name": "requestedBy",
              "value": "={{ $('Loop Over Items').item.json.requestedBy }}",
              "type": "string"
            },
            {
              "id": "c5fd8ae4-5a80-4aa7-a1ba-f185e113a593",
              "name": "originalTitle",
              "value": "={{ $json.originalTitle }}{{ $json.originalName }}",
              "type": "string"
            },
            {
              "id": "86fb7cae-5d6d-4592-8ff6-3728a055b9a0",
              "name": "createdDate",
              "value": "={{ $('Loop Over Items').item.json.createdDate }}{{ $('Loop Over Items').item.json.createdAt }}",
              "type": "string"
            },
            {
              "id": "12c32998-3518-4ad4-a2f6-1393668d8c89",
              "name": "",
              "value": "",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        976,
        672
      ],
      "id": "62e786a5-db11-4c8c-bdae-0da9d926c30e",
      "name": "terribleMerge"
    },
    {
      "parameters": {
        "amount": 1
      },
      "type": "n8n-nodes-base.wait",
      "typeVersion": 1.1,
      "position": [
        1136,
        672
      ],
      "id": "f4ba09ab-92fc-4f3c-b14b-91006010c40c",
      "name": "GoodThingsComeToThoseWhoWait",
      "webhookId": "75d0a1b3-a42c-4eda-ac4f-6e90d21cf5db"
    },
    {
      "parameters": {
        "jsCode": "const currentDate = new Date();\nconst MS_PER_DAY = 1000 * 60 * 60 * 24;\n\n// Use 'items.map' for concise transformation in n8n's Code node\nreturn items.map(item => {\n    // 1. Get the created date from the current item\n    const createdDateStr = item.json.createdDate;\n    \n    // Check if the createdDate exists and is a string\n    if (createdDateStr) {\n        // 2. Convert the ISO string to a Date object\n        const createdDate = new Date(createdDateStr);\n        \n        // 3. Calculate the difference in milliseconds\n        // The subtraction of two Date objects yields the difference in milliseconds\n        const timeDifferenceMs = currentDate.getTime() - createdDate.getTime();\n        \n        // 4. Convert milliseconds to days and round down to the nearest whole number\n        const daysSinceCreation = Math.floor(timeDifferenceMs / MS_PER_DAY);\n        \n        // 5. Add the new field to the item's JSON data\n        item.json.daysSinceRequested = daysSinceCreation;\n    } else {\n        // Handle cases where createdDate might be missing or invalid\n        item.json.daysSinceRequested = null; \n    }\n    \n    // Return the modified item\n    return item;\n});"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        960,
        336
      ],
      "id": "b0893e6d-95b9-4041-a980-dfafebb5076f",
      "name": "CalculateDaysSince"
    },
    {
      "parameters": {
        "content": "## Details Loop!\n\n- Repeatedly poke your Overseer to get human readable details poke poke poke\n- Maybe.... split this into batches if you have a lot waiting...",
        "height": 288,
        "width": 912
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        352,
        544
      ],
      "typeVersion": 1,
      "id": "4934ff14-22be-4c1e-bb22-bc5af52b5c3a",
      "name": "Sticky Note"
    },
    {
      "parameters": {
        "content": "## Overseer API\n- Less uses the /media api call, showing shows that have been requested but still \"processing\". So havent been downloaded\n\n- More uses /request api call and some filtering of the status to include tv shows that are only \"partially\" available, or missing seasons.",
        "height": 640,
        "width": 704
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -432,
        16
      ],
      "typeVersion": 1,
      "id": "68097eab-e861-430f-a86e-1194d0ab9f39",
      "name": "Sticky Note1"
    },
    {
      "parameters": {
        "jsCode": "const id = $input.first().json.tmdbId;\nconst type = $input.first().json.mediaType;\n\nreturn [\n  {\n    json: {\n      id,\n      type,\n      detailsEndpoint: `${type}/${id}`\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        672,
        672
      ],
      "id": "e98be86c-3d3d-4e04-8b46-5ff523d11934",
      "name": "movieOrTv"
    },
    {
      "parameters": {
        "content": "## Settings\n\nendpoint - your overseer url\nkey - overseer api key\nlessDetail - less or more details (look to right for an explanation)\nwarnAfter - how many days in limbo do you want your downloads to be in before you get a warning? ",
        "height": 512,
        "width": 336
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -784,
        64
      ],
      "typeVersion": 1,
      "id": "c1f7891e-ec01-4fda-bf1d-6fddc6d12e46",
      "name": "Sticky Note2"
    },
    {
      "parameters": {
        "content": "## Set your trigger!\nI dont know, maybe like a daily cron job or something?! You decide.",
        "height": 352,
        "width": 384
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -1184,
        224
      ],
      "typeVersion": 1,
      "id": "6a4385e0-5258-45c9-a33f-6579967b7c7d",
      "name": "Sticky Note3"
    },
    {
      "parameters": {
        "content": "## Ignore the fresh ones\n- Ignore anything under your warnAfter date\n- aggregates so you dont get spammed, be nice to yourself\n",
        "height": 400,
        "width": 352
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1136,
        80
      ],
      "typeVersion": 1,
      "id": "5ffd6727-a9b7-4f26-9b3f-e49fe36cf07f",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "content": "## ExitPoint\n\n- maybe an email? or telegram... can n8n automate carrier pigeons yet?",
        "height": 400,
        "width": 400
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1520,
        80
      ],
      "typeVersion": 1,
      "id": "81b44895-7db8-4faa-aedb-910fb4fcf5cc",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "5783b963-b897-48ed-8ccc-6c0a9e8d155b",
              "name": "output",
              "value": "={{ $json.output }}",
              "type": "array"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1632,
        288
      ],
      "id": "e3761a71-1d76-4331-a2e1-bd69a24fd37b",
      "name": "SendIT"
    }
  ],
  "connections": {
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "settings",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Overseerr Requests": {
      "main": [
        [
          {
            "node": "Process Overseerr Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Process Overseerr Data": {
      "main": [
        [
          {
            "node": "Split Out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [
          {
            "node": "Switch1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "movieOrTv",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Overseerr Requests1": {
      "main": [
        [
          {
            "node": "terribleMerge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Aggregate": {
      "main": [
        [
          {
            "node": "SendIT",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "lessDetails": {
      "main": [
        [
          {
            "node": "CalculateDaysSince",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Overseerr Requests2": {
      "main": [
        [
          {
            "node": "lilCleanUp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split Out1": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Get Overseerr Requests2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get Overseerr Requests",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch1": {
      "main": [
        [
          {
            "node": "lessDetails",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "CalculateDaysSince",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "settings": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IfOverXDays": {
      "main": [
        [
          {
            "node": "Aggregate",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "lilCleanUp": {
      "main": [
        [
          {
            "node": "Split Out1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "terribleMerge": {
      "main": [
        [
          {
            "node": "GoodThingsComeToThoseWhoWait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "GoodThingsComeToThoseWhoWait": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CalculateDaysSince": {
      "main": [
        [
          {
            "node": "IfOverXDays",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "movieOrTv": {
      "main": [
        [
          {
            "node": "Get Overseerr Requests1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "meta": {
    "instanceId": "558d88703fb65b2d0e44613bc35916258b0f0bf983c5d4730c00c424b77ca36a"
  }
}
